<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define" xmlns:l="/lib/layout"
         xmlns:t="/lib/hudson" xmlns:f="/lib/form" xmlns:u="/util">

    <f:block>
        All settings support the use of environment variables ($${ENV_VAR_NAME}).
        The plugin provides two special environment variables:
        <ul>
            <li>$${PROGRAM_NAME}: file name of the executable currently tested</li>
            <li>$${PROGRAM_DIR}: directory of the executable currently tested</li>
        </ul>
    </f:block>

    <f:entry title="Executable Include Pattern" field="includePattern"
             description="Pattern to find executables, valgrind will be called for each of them.">
        <f:textbox/>
    </f:entry>

    <f:entry title="Executable Exclude Pattern" field="excludePattern"
             description="The matching files will be skipped, valgrind will not be called for them">
        <f:textbox/>
    </f:entry>

    <f:entry title="Executable Arguments" field="programOptions"
             description="Command line arguments for executable under test. $${PROGRAM_NAME} contains name of current executable.">
        <f:textbox/>
    </f:entry>

    <f:entry title="Working Directory" field="workingDirectory">
        <f:textbox/>
    </f:entry>

    <f:entry title="Output Directory" field="outputDirectory">
        <f:textbox/>
    </f:entry>

    <f:entry title="File Ending" field="outputFileEnding"
             description="The plugin will add '%p' to the filename automatically, so valgrind will create a separate report file for each process (including spawned child processes)">
        <f:textbox/>
    </f:entry>

	<f:dropdownList name="tool" title="Valgrind Tool">
        <j:set var="current" value="${instance.tool}"/>
        <j:forEach var="tooldescriptor" items="${descriptor.toolDescriptors}" varStatus="loop">
            <f:dropdownListBlock title="${tooldescriptor.displayName}" value="${loop.index}"
                selected="${tooldescriptor==current.descriptor or (current==null and tooldescriptor.displayName=='Memcheck')}"
                staplerClass="${tooldescriptor.clazz.name}">
                <st:include page="/org/jenkinsci/plugins/valgrind/ValgrindBuilder/${tooldescriptor.displayName}.jelly" class="${descriptor.clazz}"/>
            </f:dropdownListBlock>
        </j:forEach>
    </f:dropdownList>

    <f:advanced>

        <f:entry title="Remove old reports" field="removeOldReports"
                 description="When enabled, the plugin will remove all old report files (all files with a matching file ending) from workspace before running valgrind for that build.">
            <f:checkbox name="removeOldReports"/>
        </f:entry>

        <f:entry title="Valgrind Executable" field="valgrindExecutable"
                 description="Location of valgrind executable to use. Leave empty to use default valgrind found via PATH">
            <f:textbox/>
        </f:entry>

        <f:entry title="Ignore exit code" field="ignoreExitCode"
                 description="Usally any exit code other than 0 (from valgrind or the program under test) is treated as an error and the build will fail, enable this option to ignore the exit code.">
            <f:checkbox name="ignoreExitCode"/>
        </f:entry>


        <f:entry title="Trace children" field="traceChildren"
                 description="When enabled, Valgrind will trace into sub-processes initiated via the exec system call. This is necessary for multi-process programs.">
            <f:checkbox name="traceChildren"/>
        </f:entry>

        <f:entry title="Child silent after fork" field="childSilentAfterFork"
                 description="When enabled, Valgrind will not show any debugging or logging output for the child process resulting from a fork call.">
            <f:checkbox name="childSilentAfterFork"/>
        </f:entry>

        <f:entry title="Generate suppression information" field="generateSuppressions"
                 description="When enabled, Valgrind will generate suppression information that can be used to create suppression files to ignore certain errors (valgrind option '--gen-suppressions=all|no').">
            <f:checkbox name="generateSuppressions"/>
        </f:entry>

        <f:entry title="Suppression files" field="suppressionFiles"
                 description="List of files that contain suppression information (valgrind option '--suppressions'">
            <f:textbox/>
        </f:entry>

        <f:entry title="Additional Valgrind Options" field="valgrindOptions"
                 description="This plugin does not expose all valgrind options, so if you want to call valgrind with a special option, you can configure it here.">
            <f:textbox/>
        </f:entry>

    </f:advanced>
</j:jelly>
